// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2.AccesoDatos;

#nullable disable

namespace _2.AccesoDatos.Migrations
{
    [DbContext(typeof(rrhhContext))]
    partial class rrhhContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_2.AccesoDatos.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdOfertaLaboral")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfertaLaboralId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfertaLaboralId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("_2.AccesoDatos.ClientesTelefonos", b =>
                {
                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdOfertaLaboral")
                        .HasColumnType("int");

                    b.HasKey("Telefono", "IdCliente");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOfertaLaboral");

                    b.ToTable("clientesTelefonos");
                });

            modelBuilder.Entity("_2.AccesoDatos.Consultor", b =>
                {
                    b.Property<int>("Legajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Legajo"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOfertaLaboral")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Legajo");

                    b.ToTable("consultor");
                });

            modelBuilder.Entity("_2.AccesoDatos.EntrevistaPerfil", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numero"));

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilResultadoId")
                        .HasColumnType("int");

                    b.Property<int>("perfilResultado")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.HasIndex("PerfilResultadoId");

                    b.HasIndex("perfilResultado");

                    b.ToTable("entrevistaPerfiles");
                });

            modelBuilder.Entity("_2.AccesoDatos.Estado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Denominacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("_2.AccesoDatos.Evaluacion", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Numero"));

                    b.Property<DateTime>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostulanteNroPostulante")
                        .HasColumnType("int");

                    b.Property<string>("Profesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoEvalucionId")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.HasIndex("PostulanteNroPostulante");

                    b.HasIndex("TipoEvalucionId");

                    b.ToTable("evalaciones");
                });

            modelBuilder.Entity("_2.AccesoDatos.OfertaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("IdOfertaLaboral")
                        .HasColumnType("int");

                    b.Property<int>("IdRequisito")
                        .HasColumnType("int");

                    b.Property<int>("NroPostulante")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdOfertaLaboral");

                    b.HasIndex("IdRequisito");

                    b.ToTable("ofertasLaborales");
                });

            modelBuilder.Entity("_2.AccesoDatos.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("perfiles");
                });

            modelBuilder.Entity("_2.AccesoDatos.Postulante", b =>
                {
                    b.Property<int>("NroPostulante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroEvaluacion")
                        .HasColumnType("int");

                    b.Property<int>("NumeroEvalucion")
                        .HasColumnType("int");

                    b.Property<int>("PerfilAsignado")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esCandidato")
                        .HasColumnType("bit");

                    b.HasKey("NroPostulante");

                    b.HasIndex("NumeroEvaluacion");

                    b.HasIndex("PerfilAsignado");

                    b.ToTable("postulantes");
                });

            modelBuilder.Entity("_2.AccesoDatos.Psicologo", b =>
                {
                    b.Property<int>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matricula"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricula");

                    b.ToTable("psicologos");
                });

            modelBuilder.Entity("_2.AccesoDatos.Requisito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfertaLaboralId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfertaLaboralId");

                    b.ToTable("requisitos");
                });

            modelBuilder.Entity("_2.AccesoDatos.TipoEvalucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tiposEvaluciones");
                });

            modelBuilder.Entity("_2.AccesoDatos.Turno", b =>
                {
                    b.Property<DateTime>("Fecha_Horario")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("EntrevistaPerfilNumero")
                        .HasColumnType("int");

                    b.Property<int>("NroEntrevista")
                        .HasColumnType("int");

                    b.Property<string>("PsicologoEntrevista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PsicologoMatricula")
                        .HasColumnType("int");

                    b.HasKey("Fecha_Horario");

                    b.HasIndex("EntrevistaPerfilNumero");

                    b.HasIndex("PsicologoMatricula");

                    b.ToTable("turnos");
                });

            modelBuilder.Entity("_2.AccesoDatos.Cliente", b =>
                {
                    b.HasOne("_2.AccesoDatos.OfertaLaboral", "OfertaLaboral")
                        .WithMany()
                        .HasForeignKey("OfertaLaboralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfertaLaboral");
                });

            modelBuilder.Entity("_2.AccesoDatos.ClientesTelefonos", b =>
                {
                    b.HasOne("_2.AccesoDatos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Cliente", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("IdOfertaLaboral");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("_2.AccesoDatos.EntrevistaPerfil", b =>
                {
                    b.HasOne("_2.AccesoDatos.Perfil", "PerfilResultado")
                        .WithMany()
                        .HasForeignKey("PerfilResultadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("perfilResultado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("PerfilResultado");
                });

            modelBuilder.Entity("_2.AccesoDatos.Evaluacion", b =>
                {
                    b.HasOne("_2.AccesoDatos.Postulante", null)
                        .WithMany("EvaluacionesRealizadas")
                        .HasForeignKey("PostulanteNroPostulante");

                    b.HasOne("_2.AccesoDatos.TipoEvalucion", "TipoEvalucion")
                        .WithMany()
                        .HasForeignKey("TipoEvalucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEvalucion");
                });

            modelBuilder.Entity("_2.AccesoDatos.OfertaLaboral", b =>
                {
                    b.HasOne("_2.AccesoDatos.Cliente", null)
                        .WithMany("OfertasLaborales")
                        .HasForeignKey("ClienteId");

                    b.HasOne("_2.AccesoDatos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Consultor", null)
                        .WithMany("OfertasLaboralesAsignadas")
                        .HasForeignKey("IdOfertaLaboral");

                    b.HasOne("_2.AccesoDatos.Requisito", "Requisito")
                        .WithMany()
                        .HasForeignKey("IdRequisito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Requisito");
                });

            modelBuilder.Entity("_2.AccesoDatos.Postulante", b =>
                {
                    b.HasOne("_2.AccesoDatos.OfertaLaboral", null)
                        .WithMany("Postulantes")
                        .HasForeignKey("NroPostulante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Evaluacion", "Evaluacion")
                        .WithMany()
                        .HasForeignKey("NumeroEvaluacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilAsignado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluacion");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("_2.AccesoDatos.Requisito", b =>
                {
                    b.HasOne("_2.AccesoDatos.OfertaLaboral", null)
                        .WithMany("Requisitos")
                        .HasForeignKey("OfertaLaboralId");
                });

            modelBuilder.Entity("_2.AccesoDatos.Turno", b =>
                {
                    b.HasOne("_2.AccesoDatos.EntrevistaPerfil", "EntrevistaPerfil")
                        .WithMany()
                        .HasForeignKey("EntrevistaPerfilNumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.AccesoDatos.Psicologo", "Psicologo")
                        .WithMany()
                        .HasForeignKey("PsicologoMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntrevistaPerfil");

                    b.Navigation("Psicologo");
                });

            modelBuilder.Entity("_2.AccesoDatos.Cliente", b =>
                {
                    b.Navigation("OfertasLaborales");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("_2.AccesoDatos.Consultor", b =>
                {
                    b.Navigation("OfertasLaboralesAsignadas");
                });

            modelBuilder.Entity("_2.AccesoDatos.OfertaLaboral", b =>
                {
                    b.Navigation("Postulantes");

                    b.Navigation("Requisitos");
                });

            modelBuilder.Entity("_2.AccesoDatos.Postulante", b =>
                {
                    b.Navigation("EvaluacionesRealizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
